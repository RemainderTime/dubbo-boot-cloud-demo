server:
  port: 8082

spring:
  application:
    name: dubbo-consumer
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
      FAIL_ON_EMPTY_BEANS: false
  datasource:
    dynamic:
      primary: master
      strict: true #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候回抛出异常,不启动会使用默认数据源.
      hikari:
        minimum-idle: 4  # 设置连接池的最小空闲连接数
        maximum-pool-size: 20  # 设置连接池的最大连接数
        connection-init-sql: SELECT 1  # 设置连接初始化的 SQL，验证连接是否有效
        connection-test-query: SELECT 1  # 设置连接池空闲连接的验证查询
        validation-timeout: 3000  # 设置验证查询的超时时间，单位：毫秒
        max-lifetime: 1800000  # 设置连接池中连接的最大生命周期，单位：毫秒
        idle-timeout: 600000  # 设置空闲连接的超时时间，单位：毫秒（默认10分钟）
        time-between-eviction-runs-millis: 30000  # 每30秒检查一次空闲连接
        min-evictable-idle-time-millis: 60000  # 空闲连接超过60秒会被丢弃
      datasource:
        master: #${SERVER_ADDRESS}
          url: jdbc:mysql://127.0.0.1:3307/xf-boot-base?useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Shanghai
          username: root
          password:
          driver-class-name: com.mysql.cj.jdbc.Driver
          hikari:
            minimum-idle: 4  # 主数据源的最小空闲连接数
            maximum-pool-size: 20  # 主数据源的最大连接数

dubbo:
  application:
    logger: slf4j
    name: DubboConsumerApplication
    qos-enable: false # 关闭 qos 服务,因为 QoS 服务是用来管理 Dubbo 服务提供者的运行状态和健康状况的，默认端口22222
  registry:
    address: nacos://127.0.0.1:8848
    username: nacos
    password:
  protocol:
    name: tri

seata:
  server:
    address: 127.0.0.1:8091
  tm:
    default-transaction-manager-type: AT   # 默认使用 AT 模式
    default-timeout: 30000  # 设置全局事务超时
  dubbo:
    enable: true
  client:
    tm:
      default:
        globalTransactionTimeout: 60000  # 设置事务超时时间为 60 秒，单位为毫秒
  application-id: order-service  # 这里是应用的唯一标识，可以根据你的服务名称设置
  tx-service-group: dubbo_tx_group  # 事务分组名称，确保每个 Dubbo 服务的 tx-service-group 一致
  registry:
    type: nacos  # 注册中心类型，如 nacos，若使用其他注册中心需要调整
    nacos:
      server-addr: 127.0.0.1:8848  # Nacos 地址和端口
      namespace: "581b3f92-be53-4537-b777-885ce60d07e9"
      group: SEATA_GROUP
      username: "nacos"            # 如果 Nacos 需要认证
      password: ""
  config:
    type: nacos
    nacos:
      server-addr: 127.0.0.1:8848  # Nacos 地址和端口
      namespace: "581b3f92-be53-4537-b777-885ce60d07e9"
      group: SEATA_GROUP
      username: "nacos"            # 如果 Nacos 需要认证
      password: ""
      data-id: "seata-server.properties"
  service:
    grouplist:
      default: ${seata.address:127.0.0.1}:8091
    vgroup-mapping:
      dubbo_tx_group: default  # 配置事务组，确保与 Seata Server 配置一致
    enable-degrade: false
    disable-global-transaction: false

logging:
  level:
    root: INFO
    org.apache.dubbo: ERROR # 查看 Dubbo 的详细日志
    org.springframework: ERROR
    com.zaxxer.hikari: DEBUG  # 如果使用 HikariCP 数据源，查看连接池日志
    org.mybatis: DEBUG        # MyBatis 日志输出
    jdbc.sqlonly: DEBUG       # 输出 SQL 语句
    jdbc.sqltiming: DEBUG     # 输出 SQL 执行时间